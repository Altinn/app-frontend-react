{
    "$id": "https://altinncdn.no/schemas/json/layout/layout.schema.v1.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Altinn layout",
    "description": "Schema that describes the layout configuration for Altinn applications.",
    "type": "object",
    "additionalProperties": true,
    "properties": {
      "data": {
        "$ref": "#/definitions/data"
      }
    },
    "definitions": {
      "data": {
        "title": "The layout data",
        "description": "Contains data describing the layout configuration.",
        "type": "object",
        "properties": {
          "layout": {
            "$ref": "#/definitions/layout"
          }
        }
      },
      "layout": {
        "title": "The layout",
        "description": "Array of components to be presented in the layout.",
        "type": "array",
        "items": {
          "$ref": "#/definitions/component"
        }
      },
      "component": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "The component ID. Must be unique within a given layout."
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "The component type.",
            "enum": ["AddressComponent", "AttachmentList", "Button", "Checkboxes", "Datepicker", "Dropdown", "FileUpload", "Group", "Header", "Input", "NavigationButtons", "Paragraph", "RadioButtons", "Summary", "TextArea"]
          },
          "required": {
            "type": "boolean",
            "title": "Required",
            "description": "Boolean value indicating if the component is required when filling in the form. Defaults to false.",
            "default": false
          },
          "readOnly": {
            "type": "boolean",
            "title": "Read only",
            "description": "Boolean value indicating if the component should be presented as read only. Defaults to false.",
            "default": false
          },
          "textResourceBindings": {
            "type": "object",
            "title": "Text resource bindings",
            "description": "Text resource bindings for a component.",
            "additionalProperties": {
              "type": "string"
            },
            "examples": [{"title": "some.text.binding", "helpText": "some.other.text.binding" }]
          },
          "dataModelBindings": {
            "type": "object",
            "title": "Data model bindings",
            "description": "Data model bindings for a component.",
            "additionalProperties": {
              "type": "string"
            },
            "examples": [{"simpleBinding": "some.data.binding"}]
          },
          "triggers": {
            "title": "Triggers",
            "description": "An array of actions that should be triggered when data connected to this component changes.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["validation", "validatePage", "validateAllPages"]
            }
          }
        },
        "required": ["id", "type"],
        "allOf": [
          { "if": {"properties": {"type": { "const": "Datepicker"}}}, "then": { "$ref": "#/definitions/datepickerComponent"}},
          { "if": {"properties": {"type": { "const": "FileUpload"}}}, "then": { "$ref": "#/definitions/fileUploadComponent"}},
          { "if": {"properties": {"type": { "const": "NavigationButtons"}}}, "then": { "$ref": "#/definitions/navigationButtonsComponent"}},
          { "if": {"properties": {"type": { "const": "Group"}}}, "then": { "$ref": "#/definitions/groupComponent"}},
          { "if": {"properties": {"type": { "const": "Dropdown"}}}, "then": { "$ref": "#/definitions/selectionComponents"}},
          { "if": {"properties": {"type": { "const": "RadioButtons"}}}, "then": { "$ref": "#/definitions/selectionComponents"}},
          { "if": {"properties": {"type": { "const": "Checkboxes"}}}, "then": { "$ref": "#/definitions/selectionComponents"}},
          { "if": {"properties": {"type": { "const": "AddressComponent"}}}, "then": { "$ref": "#/definitions/addressComponent"}},
          { "if": {"properties": {"type": { "const": "Summary"}}}, "then": {"$ref": "#/definitions/summaryComponent"}},
          { "if": {"properties": {"type": { "const": "AttachmentList"}}}, "then": { "ref": "#/definitions/attachmentListComponent"}}
        ]
      },
      "fileUploadComponent": {
        "properties": {
          "maxFileSizeInMB": {
            "title": "Maximum file size in MB",
            "description": "Sets the maximum file size allowed in megabytes.",
            "type": "integer",
            "minimum": 0
          },
          "maxNumberOfAttachments": {
            "title": "Maximum allowed attachments",
            "description": "Sets the maximum number of attachments allowed to upload.",
            "type": "integer",
            "minimum": 0
          },
          "minNumberOfAttachments": {
            "title": "Minimum allowed attachments",
            "description": "Sets the minimum number of attachments to upload",
            "type": "integer",
            "minimum": 0
          },
          "displayMode": {
            "title": "Display mode",
            "description": "Sets the display mode for the file upload component.",
            "type":"string",
            "enum": ["simple", "list"]
          },
          "hasCustomFileEndings": {
            "title": "Has custrom file endings",
            "description": "Boolean value indicating if the component has valid file endings",
            "type": "boolean"
          },
          "validFileEndings": {
            "title": "Valid file endings",
            "description": "A seperated string of valid file endings to upload. If not set all endings are accepted.",
            "type": "string",
            "examples": ["csv", "doc", "docx", "gif", "jpeg", "pdf", "txt"]
          }
        },
        "required": ["displayMode", "maxFileSizeInMB", "maxNumberOfAttachments", "minNumberOfAttachments"]
      },
      "datepickerComponent": {
        "properties": {
          "minDate": {
            "type": "string",
            "title": "Minimum allowed date",
            "description": "Sets the minimum allowed date. Defaults to 1900-01-01T12:00:00.000Z'.",
            "default": "1900-01-01T12:00:00.000Z"
          },
          "maxDate": {
            "type": "string",
            "title": "Maximum allowed date",
            "description": "Sets the maxiumum allowed date. Defaults to 2100-01-01T12:00:00.000Z.'",
            "default": "2100-01-01T12:00:00.000Z."
          },
          "timeStamp": {
            "type": "boolean",
            "title": "Time stamp",
            "description": "Boolean value indicating if the date time should be stored as a timeStamp. Defaults to false.",
            "default": false
          }
        },
        "required": []
      },
      "navigationButtonsComponent": {
        "properties": {
          "showBackButton": {
            "type": "boolean",
            "title": "Show back button",
            "description": "Shows two buttons (back/next) instead of just 'next'."
          }
        }
      },
      "groupComponent": {
        "properties": {
          "children": {
            "title": "Children",
            "description": "An array of child components belonging to the group.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxCount": {
              "type": "integer",
              "title": "Maximum count",
              "description": "The maximum number of iterations of a group. Only relevant if group is repeating.",
              "minimum": 0
          }
        }
      },
      "options": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label",
            "description": "The option label. Can be plain text or a text resource binding."
          },
          "value": {
            "type": "string",
            "title": "Value",
            "description": "The option value."
          }
        },
        "required": ["label", "value"]
      },
      "selectionComponents": {
        "properties": {
          "optionsId": {
            "type": "string",
            "title": "Options ID",
            "description": "Reference to connected options by id."
          },
          "options": {
            "type": "array",
            "title": "Options",
            "description": "An array of options. Only relevant if no optionsId is set.",
            "items": {
              "$ref": "#/definitions/options"
            }
          },
          "preselectedOptionIndex": {
            "type": "integer",
            "title": "Preselected option index",
            "description": "Sets a preselected index.",
            "minimum": 0
          }
        }
      },
      "addressComponent": {
        "properties": {
          "simplified": {
            "type": "boolean",
            "title": "Simplified",
            "description": "Boolean value indicating if the address component should be shown in simple mode.",
            "default": false
          }
        }
      },
      "summaryComponent": {
        "properties": {
          "componentRef": {
            "type": "string",
            "title": "Component reference",
            "description": "String value indicating which layout component (by ID) the summary is for."
          },
          "pageRef": {
            "type": "string",
            "title": "Page reference",
            "description": "String value indicating which layout page the referenced component is defined on."
          }
        }
      },
      "attachmentListComponent": {
        "properties": {
          "dataTypeIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Data type IDs",
            "description": "List of data type IDs for the attachment list to show.",
            "examples": [["SomeDataType", "SomeOtherDataType"]]
          }
        }
      }
    }
}
